@model UAndes.ICC5103._202301.Models.EnajenacionViewModel

@{
    ViewBag.Title = "Create";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link rel="stylesheet" href="~/Content/Site.css">
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h3>NUEVA DECLARACIÓN SOBRE ENAJENACIÓN E INSCRIPCIÓN DE BIENES RAÍCES (F2890)</h3>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="card">
        <div id="form-card">
            <h4>
                INFORMACIÓN DE LA ESCRITURA
            </h4>
        </div>
        <div class="card-body" id="card-body">
            <blockquote class="blockquote">
                <div class="row g-1">
                    <div class="col-md-8" id="card-body-col">
                        <div class="col-md-4" id="card-body-col">
                            @Html.LabelFor(model => model.Enajenacion.CNE, "Código Naturleza Escritura", htmlAttributes: new { @class = "form-control", @id = "form-label" })
                        </div>
                        <div class="col-md-8" id="card-body-col">
                            @Html.DropDownListFor(model => model.Enajenacion.CNE, new SelectList(@Model.CNEOptions, "Valor", "Descripcion"), "Seleccione Código Naturaleza Escritura", new { @class = "form-control", @id = "form-editor", @onchange = "changeDisplay()" })
                        </div>
                    </div>
                </div>
            </blockquote>
        </div>
    </div>
    <div id="details">
        <div class="card">
            <div id="form-card">
                <h4>
                    INFORMACIÓN DE LA PROPIEDAD ENAJENADA
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <div class="row g-3">
                        <div class="col-md-4" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Comuna, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.DropDownListFor(model => model.Enajenacion.Comuna, new SelectList(@Model.ComunaOptions, "Valor", "Comuna"), "Selecione la comuna", new { @class = "form-control form-control-input", @id = "form-editor" })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Comuna, "*Campo obligatorio*", new { @class = "text-danger text-padding", @style = "margin-top: 5px;" })
                            </div>
                        </div>
                        <div class="col-md-4" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Manzana, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.Manzana, new { htmlAttributes = new { @class = "form-control form-control-input", @id = "form-editor", placeholder = "Manzana" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Manzana, "*Campo obligatorio*", new { @class = "text-danger text-padding", @style = "margin-top: 5px;" })
                            </div>
                        </div>
                        <div class="col-md-4" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Predio, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.Predio, new { htmlAttributes = new { @class = "form-control form-control-input", @id = "form-editor", placeholder = "Predio" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Predio, "*Campo obligatorio*", new { @class = "text-danger text-padding", @style = "margin-top: 5px;" })
                            </div>
                        </div>
                    </div>
                </blockquote>
            </div>
        </div>
        <div class="card" id="alienating">
            <div id="form-card">
                <h4>
                    INFORMACIÓN DE LOS ENAJENANTES(S) O CAUSANTE(S)
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <table id="myTableEnajenantes" class="table">

                        <tr>
                            <th> Rut </th>
                            <th> % Derechos </th>
                            <th></th>
                        </tr>

                        <tbody>
                        </tbody>
                    </table>
                    <button type="button" onclick="addRowEnajenantes(true)" class="btn btn-primary" id="btn-secondary">Agregar</button>
                </blockquote>
            </div>
        </div>
        <div class="card">
            <div id="form-card">
                <h4>
                    INFORMACIÓN DE LOS ADQUIRIENTES(S) O HEREDEROS(S)
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <table id="myTableAdquirientes" class="table">
                        <tr>
                            <th> Rut </th>
                            <th> ¿El % esta acreditado?</th>
                            <th> % Derechos</th>
                            <th></th>
                        </tr>
                        <tbody>
                        </tbody>
                    </table>
                    <button type="button" onclick="addRowAdquirientes(true)" class="btn btn-primary" id="btn-secondary">Agregar</button>
                </blockquote>
            </div>
        </div>
        <div class="card">
            <div id="form-card">
                <h4>
                    INSCRIPCIÓN (Esta sección debe ser llenada exclusivamente por un Conservador o Notario-Conservador)
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <div class="row g-1">
                        <div class="col-md-6" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Fojas, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.Fojas, new { htmlAttributes = new { @class = "form-control form-control-input", @id = "form-editor", placeholder = "Ingrese Fojas" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Fojas, "*Campo obligatorio*", new { @class = "text-danger text-padding", @style= "margin-top: 5px; margin-bottom: 10px;" })
                            </div>
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md-6" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.IdInscripcion, "Número", htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.IdInscripcion, new { htmlAttributes = new { @class = "form-control form-control-input", @id = "form-editor", placeholder = "Ingrese Número" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.IdInscripcion, "*Campo obligatorio*", new { @class = "text-danger text-padding", @style = "margin-top: 5px;" })
                            </div>
                        </div>
                        <div class="col-md-6" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.FechaInscripcion, "Fecha de Inscripción", htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.FechaInscripcion, new { htmlAttributes = new { @class = "form-control form-control-input", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.FechaInscripcion, "*Campo obligatorio*", new { @class = "text-danger text-padding", @style = "margin-top: 5px;" })
                                <span class="fechaValidator" style="display:none; font-size: 13px; color: rgb(169, 68, 66);">*Fecha no valida*</span>
                            </div>
                        </div>
                    </div>
                </blockquote>
            </div>
        </div>
        <div>
            <div class="container">
                <div class="row">
                    <div class="col-md-12 bg-light text-right">
                        <button class="btn btn-primary" id="btn-primaryy" type="submit">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

 <script>

    let inputValue = document.getElementById("form-editor");
    let details = document.getElementById("details");

    inputValue.value = "";
    details.style.display = "none";

    var elements = document.getElementsByClassName("text-padding");
    function changeDisplay()
    {
        for (var i = 0; i < elements.length; i++) {
            elements[i].style.display = "none";
        }

        let alienating = document.getElementById("alienating");
        let value = inputValue.value;

        if (value == "")
        {
            details.style.display = "none";
        }
        else
        {
            if (value == 1)
            {
                alienating.style.display = "none";
                details.style.display = "block";
            }
            else
            {
                if (value == 0)
                {
                    alienating.style.display = "block";
                    details.style.display = "block";
                }
            }
        }
    }

    function addRowEnajenantes(withTrash)
    {
        var table = document.getElementById("myTableEnajenantes");
        var row = table.insertRow(-1);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        cell1.innerHTML = "<div><div>" + '@Html.Raw(Html.EditorFor(model => model.Enajenantes[0].RutEnajenante, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())' + "</div><span class=" + '"' + "rutValidator" + '"' + " style=" + '"' + "display:none; font-size: 13px; color: rgb(169, 68, 66);" + '"' +">*Utilizar formato correcto*</span></div>";
        cell2.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Enajenantes[0].PorcentajeEnajenante, new { htmlAttributes = new { @class = "form-control porcentajeEnajenantes"  } }).ToHtmlString())';

        cell2.value = "0";

        if (withTrash)
        {
            cell3.innerHTML = "<button onclick='deleteThisRow(this)' id='btn-delete'><i class='fas fa-trash'></i></button>";
        }
    }
    addRowEnajenantes(false);

    function addRowAdquirientes(withTrash)
    {
        var table = document.getElementById("myTableAdquirientes");
        var row = table.insertRow(-1);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);

        cell2.style.paddingRight = "150px";

        cell1.innerHTML = "<div><div>" + '@Html.Raw(Html.EditorFor(model => model.Adquirientes[0].RutAdquiriente, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())' + "</div><span class=" + '"' + "rutValidator" + '"' +" style=" + '"' + "display:none; font-size: 13px; color: rgb(169, 68, 66);" + '"' + ">*Utilizar formato correcto*</span></div>";
        cell2.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Adquirientes[0].CheckAdquiriente, new { htmlAttributes = new { @class = "form-control checkAdquirientes", @onclick = "display(this)" } }).ToHtmlString())';
        cell3.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Adquirientes[0].PorcentajeAdquiriente, new { htmlAttributes = new { @class = "form-control porcentajeAdquirientes", @style = "visibility: hidden"  } }).ToHtmlString())';

        cell2.value = "false";
        cell3.value = "0";

        if (withTrash)
        {
            cell4.innerHTML = "<button onclick='deleteThisRow(this)' id='btn-delete'><i class='fas fa-trash'></i></button>";
        }
    }
     addRowAdquirientes(false);

    function deleteThisRow(btn)
    {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }

    function display(element)
    {
        var row = element.parentNode.parentNode.children[2].children[0];

        if (element.value == "false") {
            element.value = "true";
            row.style.visibility = "hidden";
        }
        else {
            element.value = "false";
            row.value = 0;
            row.style.visibility = "visible";
        }
    }

     function verificarValor(input) {
         var regex = /^\d+-[0-9k]$/;

         if (regex.test(input)) {
             return true
         } else {
             return false
         }
     }

    var btnSave = document.getElementById("btn-primaryy");

    btnSave.addEventListener("click", function (event)
    {
        var CNEInput = document.getElementById("form-editor").value
        var validatorsInput = document.getElementsByClassName("rutValidator")
        for (var i = CNEInput; i < validatorsInput.length; i++) {
            var rutInput = validatorsInput[i].parentNode.children[0].children[0].value;
            if (rutInput != "") {
                validatorsInput[i].innerHTML = "*Utilizar formato correcto*"
                console.log(rutInput, verificarValor(rutInput))
                if (verificarValor(rutInput) == false) {
                    validatorsInput[i].style.display = "block";
                    event.preventDefault();
                } else {
                    validatorsInput[i].style.display = "none";
                }
            } else {
                validatorsInput[i].innerHTML = "*Campo obligatorio*"
                validatorsInput[i].style.display = "block";
                event.preventDefault();
            }
        }

        var fechaActual = new Date()
        var fechaValidator = document.getElementsByClassName("fechaValidator")
        for (var i = 0; i < fechaValidator.length; i++) {
            var fecha = fechaValidator[i].parentNode.children[0].value;
            if (fecha == "") {
                event.preventDefault();
            } else {
                var fechaComparar = new Date(fecha)
                console.log(fechaComparar, fechaActual)
                if (fechaComparar > fechaActual) {
                    fechaValidator[i].style.display = "block";
                    event.preventDefault();
                } else {
                    fechaValidator[i].style.display = "none";
                }
            }
        }

        var elementsInput = document.getElementsByClassName("form-control-input")
        for (var i = 0; i < elementsInput.length; i++) {
            if (elementsInput[i].value.length == 0) {
                elements[i].style.display = "block";
            }
            else {
                elements[i].style.display = "none";
            }
        }
        var negativeValue = 0;
        var overValue = 0;
        var noneValue = 0;
        var totalPercentage = 0;
        var checkAdquirientes = document.getElementsByClassName("checkAdquirientes");
        var percentageAdquirientes = document.getElementsByClassName("porcentajeAdquirientes");

        for (var i = 0; i < checkAdquirientes.length; i++)
        {    
            if (checkAdquirientes[i].value != "false")
            {
                percentageAdquirientes[i].value = 0;
            }
            else
            {
                if (percentageAdquirientes[i].value == '') {
                    noneValue = 1;
                }
                if (parseFloat(percentageAdquirientes[i].value) <= 0){
                    negativeValue = 1;
                }
                if (parseFloat(percentageAdquirientes[i].value) > 100) {
                    overValue = 1;
                }
                totalPercentage += parseFloat(percentageAdquirientes[i].value);
            }
         }

        if (noneValue == 1) {
            alert("Hay un valor de porcentaje en adquiriente/s que esta vacio, esto no es posible.");
            event.preventDefault();
        }
        else {
            if (overValue == 1) {
                alert("Hay un porcentaje de adquiriente/s que es mayor a 100, esto no es posible.");
                event.preventDefault();
            }
            else
            {
                if (negativeValue == 1) {
                    alert("Hay un porcentaje de adquiriente/s que es negativo o es igual a 0, esto no es posible.");
                    event.preventDefault();
                }
                else {
                    if (totalPercentage > 100) {
                        alert("La suma de porcentajes de adquirientes entre los usuarios acreditados es mayor al 100%.");
                        event.preventDefault();
                    }
                }
            }
        }

        let inputValue = document.getElementById("form-editor");
        let value = inputValue.value;

        if (value != 1) {
            if (totalPercentage != 100) {
                negativeValue = 0;
                overValue = 0;
                noneValue = 0;
                totalPercentage = 0;
                percentageEnajenantes = document.getElementsByClassName("porcentajeEnajenantes");

                for (var i = 0; i < percentageEnajenantes.length; i++) 
                {
                    if (percentageEnajenantes[i].value == ''){
                        noneValue = 1;
                    }
                    if (parseFloat(percentageEnajenantes[i].value) <= 0){
                        negativeValue = 1;
                    }
                    if (parseFloat(percentageEnajenantes[i].value) > 100){
                        overValue = 1;
                    }
                    totalPercentage += parseFloat(percentageEnajenantes[i].value);
                }
                if (noneValue == 1) {
                    alert("Hay un valor de porcentaje en enajenante/s que esta vacio, esto no es posible.");
                    event.preventDefault();
                }
                else {
                    if (overValue == 1) {
                        alert("Hay un porcentaje de enajenante/s que es mayor a 100, esto no es posible.");
                        event.preventDefault();
                    }
                    else
                    {
                        if (negativeValue == 1) {
                            alert("Hay un porcentajes de enajenante/s que es negativo o es igual a 0, esto no es posible.");
                            event.preventDefault();
                        }
                        else {
                            if (totalPercentage > 100) {
                                alert("La suma de porcentajes de enajenantes entre los usuarios acreditados es mayor al 100%.");
                                event.preventDefault();
                            }
                        }
                    }
                }
            }
        }
    });

    for (var i = 0; i < elements.length; i++) 
    {
        elements[i].style.display = "none";
    }



</script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
