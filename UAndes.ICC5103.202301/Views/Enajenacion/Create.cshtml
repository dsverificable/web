@model UAndes.ICC5103._202301.Models.EnajenacionViewModel

@{
    ViewBag.Title = "Create";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link rel="stylesheet" href="~/Content/Site.css">
</head>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h3>NUEVA DECLARACIÓN SOBRE ENAJENACIÓN E INSCRIPCIÓN DE BIENES RAÍCES (F2890)</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    var a = 0;


    <div class="card">
        <div id="form-card">
            <h4>
                INFORMACIÓN DE LA ESCRITURA
            </h4>
        </div>
        <div class="card-body" id="card-body">
            <blockquote class="blockquote">
                <div class="row g-1">
                    <div class="col-md-8" id="card-body-col">
                        <div class="col-md-4" id="card-body-col">
                            @Html.LabelFor(model => model.Enajenacion.CNE, "Código Naturleza Escritura", htmlAttributes: new { @class = "form-control", @id = "form-label" })
                        </div>
                        <div class="col-md-8" id="card-body-col">
                            @Html.DropDownListFor(model => model.Enajenacion.CNE, new SelectList(@Model.CNEOptions, "Valor", "Descripcion"), "Seleccione Código Naturaleza Escritura", new { @class = "form-control", @id = "form-editor", @onchange = "changeDisplay()" })
                            @Html.ValidationMessageFor(model => model.Enajenacion.CNE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </blockquote>
        </div>
    </div>

    <div id="details">
        <div class="card">
            <div id="form-card">
                <h4>
                    INFORMACIÓN DE LA PROPIEDAD ENAJENADA
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <div class="row g-3">
                        <div class="col-md-4" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Comuna, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.DropDownListFor(model => model.Enajenacion.Comuna, new SelectList(@Model.ComunaOptions, "Valor", "Comuna"), "Selecione la comuna", new { @class = "form-control", @id = "form-editor" })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Comuna, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Manzana, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.Manzana, new { htmlAttributes = new { @class = "form-control", @id = "form-editor", placeholder = "Manzana" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Manzana, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Predio, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.Predio, new { htmlAttributes = new { @class = "form-control", @id = "form-editor", placeholder = "Predio" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Predio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </blockquote>
            </div>
        </div>


        <div class="card" id="alienating">
            <div id="form-card">
                <h4>
                    INFORMACIÓN DE LOS ENAJENANTES(S) O CAUSANTE(S)
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <table id="myTableEnajenantes" class="table">

                        <tr>
                            <th> Rut </th>
                            <th> % Derechos </th>
                            <th> % Derechos No Acreditados</th>
                            <th></th>
                        </tr>

                        <tbody>
                        </tbody>
                    </table>
                    <button type="button" onclick="addRowEnajenantes(true)" class="btn btn-primary" id="btn-secondary">Agregar</button>
                </blockquote>
            </div>
        </div>



        <div class="card">
            <div id="form-card">
                <h4>
                    INFORMACIÓN DE LOS ADQUIRIENTES(S) O HEREDEROS(S)
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <table id="myTableAdquirientes" class="table">

                        <tr>
                            <th> Rut </th>
                            <th> % Derechos </th>
                            <th> % Derechos No Acreditados</th>
                            <th></th>
                        </tr>

                        <tbody>
                        </tbody>
                    </table>
                    <button type="button" onclick="addRowAdquirientes(true)" class="btn btn-primary" id="btn-secondary">Agregar</button>
                </blockquote>
            </div>
        </div>


        <div class="card">
            <div id="form-card">
                <h4>
                    INSCRIPCIÓN (Esta sección debe ser llenada exclusivamente por un Conservador o Notario-Conservador)
                </h4>
            </div>
            <div class="card-body" id="card-body">
                <blockquote class="blockquote">
                    <div class="row g-1">
                        <div class="col-md-6" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.Fojas, htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.Fojas, new { htmlAttributes = new { @class = "form-control", @id = "form-editor", placeholder = "Ingrese Fojas" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.Fojas, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row g-2">
                        <div class="col-md-6" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.IdInscripcion, "Número", htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.IdInscripcion, new { htmlAttributes = new { @class = "form-control", @id = "form-editor", placeholder = "Ingrese Número" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.IdInscripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6" id="card-body-col">
                            <div class="col-md-4" id="card-body-col">
                                @Html.LabelFor(model => model.Enajenacion.FechaInscripcion, "Fecha de Inscripción", htmlAttributes: new { @class = "form-control", @id = "form-label" })
                            </div>
                            <div class="col-md-8" id="card-body-col">
                                @Html.EditorFor(model => model.Enajenacion.FechaInscripcion, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.Enajenacion.FechaInscripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </blockquote>
            </div>
        </div>

        <div>
            <div class="container">
                <div class="row">
                    <div class="col-md-12 bg-light text-right">
                        <button class="btn btn-primary" id="btn-primary" type="submit">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>

        let inputValue = document.getElementById("form-editor");
        let details = document.getElementById("details")
        inputValue.value = "";
        details.style.display = "none";

        function changeDisplay() {
            let alienating = document.getElementById("alienating")
            let a = inputValue.value
            console.log(a);
            if (a == "") {
                details.style.display = "none";
            } else {
                if (a == 1) {
                    alienating.style.display = "none";
                    details.style.display = "block";
                } else {
                    if (a == 0) {
                        alienating.style.display = "block";
                        details.style.display = "block";
                    }
                }
            }
        }

        function addRowEnajenantes(withTrash) {
            var table = document.getElementById("myTableEnajenantes");
            var row = table.insertRow(-1);
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            var cell4 = row.insertCell(3);
            cell1.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Enajenantes[0].RutEnajenante, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())';;
            cell2.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Enajenantes[0].PorcentajeEnajenante, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())';
            cell3.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Enajenantes[0].CheckEnajenante, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())';

            if (withTrash) {
                cell4.innerHTML = "<button onclick='deleteThisRow(this)' id='btn-delete'><i class='fas fa-trash'></i></button>";

                }
        }

        function addRowAdquirientes(withTrash) {
            var table = document.getElementById("myTableAdquirientes");
            var row = table.insertRow(-1);
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            var cell4 = row.insertCell(3);
            cell1.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Adquirientes[0].RutAdquiriente, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())';
            cell2.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Adquirientes[0].PorcentajeAdquiriente, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())';
            cell3.innerHTML = '@Html.Raw(Html.EditorFor(model => model.Adquirientes[0].CheckAdquiriente, new { htmlAttributes = new { @class = "form-control" } }).ToHtmlString())';

            if (withTrash) {
                cell4.innerHTML = "<button onclick='deleteThisRow(this)' id='btn-delete'><i class='fas fa-trash'></i></button>";

            }
        }

        function deleteThisRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

        addRowEnajenantes(false);
        addRowAdquirientes(false);

    </script>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
